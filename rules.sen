rule BanForbiddenFunctions {
    block system {
        error "The function system() is forbidden due to command injection risks."
    }
}
rule IntegerOverflowCheck {
    on call safe_malloc(size) {
        if size1 + size2 overflows {
            error "Potential integer overflow in size calculation for safe_malloc."
        }
    }
}
rule FormatStringCheck {
    on call printf() {
        require_literal_format {
            error "First argument to printf must be a string literal to prevent format string vulnerabilities."
        }
    }
}
rule EnforceNullAfterFree {
    on call free() {
        require_null_after {
           error "Dangling pointer risk. Pointer must be nullified after free."
        }
    }
}
rule TaintAnalysisExample {
    source scanf {
        error "scanf introduces untrusted user data."
    }

    sink strcpy {
        error "strcpy is a dangerous sink for untrusted data."
    }

    sanitizer clean_string {
    }
}